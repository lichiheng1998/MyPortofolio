{"version":3,"sources":["webpack:///C:/Users/lichi/ReactApp/my-page/src/pages/callback.js","webpack:///C:/Users/lichi/ReactApp/my-page/src/utils/auth.js"],"names":["__webpack_require__","r","__webpack_exports__","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","_utils_auth__WEBPACK_IMPORTED_MODULE_1__","Callback","handleAuthentication","a","createElement","d","tokens","isAuthenticated","login","getProfile","logout","auth0_js__WEBPACK_IMPORTED_MODULE_0__","gatsby__WEBPACK_IMPORTED_MODULE_1__","isBrowser","window","auth","auth0","WebAuth","domain","process","clientID","redirectUri","audience","responseType","scope","accessToken","idToken","expiresAt","user","localStorage","getItem","authorize","setSession","cb","flag","err","authResult","navigate","expiresIn","Date","getTime","setItem","idTokenPayload","parseHash"],"mappings":"0FAAAA,EAAAC,EAAAC,GAAA,IAAAC,EAAAH,EAAA,KAAAI,EAAAJ,EAAAK,EAAAF,GAAAG,EAAAN,EAAA,KAUeO,UANE,WAGf,OAFAC,cAEOJ,EAAAK,EAAAC,cAAA,0DCPTV,EAAAW,EAAAT,EAAA,sBAAAU,IAAAZ,EAAAW,EAAAT,EAAA,sBAAAW,IAAAb,EAAAW,EAAAT,EAAA,sBAAAY,IAAAd,EAAAW,EAAAT,EAAA,sBAAAM,IAAAR,EAAAW,EAAAT,EAAA,sBAAAa,IAAAf,EAAAW,EAAAT,EAAA,sBAAAc,IAAA,IAAAC,EAAAjB,EAAA,KAAAkB,EAAAlB,EAAA,IAIMmB,EAA8B,oBAAXC,OAEnBC,EAAOF,EACT,IAAIG,IAAMC,QAAQ,CAChBC,OAAQC,sBACRC,SAAUD,mCACVE,YAAaF,gCACbG,SAAUH,4BACVI,aAAc,iBACdC,MAAO,yBAET,GAGWlB,EAAS,CACpBmB,aAAa,EACbC,SAAS,EACTC,WAAW,GAGTC,EAAO,GAEErB,EAAkB,WAC7B,GAAKM,EAGL,MAA8C,SAAvCgB,aAAaC,QAAQ,eAGjBtB,EAAQ,WACdK,GAILE,EAAKgB,aAGDC,EAAa,SAACC,EAAeC,GAAhB,gBAACD,MAAK,cAAmB,SAACE,EAAKC,GAChD,GAAID,EAGF,OAFAE,YAAS,UACTJ,IAIF,GAAIG,GAAcA,EAAWX,aAAeW,EAAWV,QAAS,CAC9D,IAAIC,EAAmC,IAAvBS,EAAWE,WAAmB,IAAIC,MAAOC,UACzDlC,EAAOmB,YAAcW,EAAWX,YAChCnB,EAAOoB,QAAUU,EAAWV,QAC5BpB,EAAOqB,UAAYA,EACnBE,aAAaY,QAAQ,cAAc,GACnCb,EAAOQ,EAAWM,eACdR,GACAG,YAAS,KAEbJ,OAIS/B,EAAuB,WAC7BW,GAILE,EAAK4B,UAAUX,MAGJvB,EAAa,WACxB,OAAOmB,GAQIlB,EAAS,WACpBmB,aAAaY,QAAQ,cAAc,GACnC1B,EAAKL","file":"component---src-pages-callback-js-08912d28484fa19fe00d.js","sourcesContent":["// src/pages/callback.js\r\nimport React from \"react\"\r\nimport { handleAuthentication } from \"../utils/auth\"\r\n\r\nconst Callback = () => {\r\n  handleAuthentication()\r\n\r\n  return <p>Loading...</p>\r\n}\r\n\r\nexport default Callback\r\n","// src/utils/auth.js\r\nimport auth0 from \"auth0-js\";\r\nimport { navigate } from \"gatsby\";\r\n\r\nconst isBrowser = typeof window !== \"undefined\"\r\n\r\nconst auth = isBrowser\r\n  ? new auth0.WebAuth({\r\n      domain: process.env.AUTH0_DOMAIN,\r\n      clientID: process.env.AUTH0_CLIENTID,\r\n      redirectUri: process.env.AUTH0_CALLBACK,\r\n      audience: process.env.AUTH0_AUDIENCE,\r\n      responseType: \"token id_token\",\r\n      scope: \"openid profile email\",\r\n    })\r\n  : {}\r\n\r\n  // insert after auth const\r\n  export const tokens = {\r\n    accessToken: false,\r\n    idToken: false,\r\n    expiresAt: false,\r\n  };\r\n\r\n  let user = {};\r\n\r\n  export const isAuthenticated = () => {\r\n    if (!isBrowser) {\r\n      return;\r\n    }\r\n    return localStorage.getItem(\"isLoggedIn\") === \"true\"\r\n  }\r\n\r\n  export const login = () => {\r\n    if (!isBrowser) {\r\n        return;\r\n    }\r\n\r\n    auth.authorize();\r\n  }\r\n\r\n  const setSession = (cb = () => {}, flag) => (err, authResult) => {\r\n    if (err) {\r\n      navigate(\"/\");\r\n      cb();\r\n      return;\r\n    }\r\n\r\n    if (authResult && authResult.accessToken && authResult.idToken) {\r\n      let expiresAt = authResult.expiresIn * 1000 + new Date().getTime();\r\n      tokens.accessToken = authResult.accessToken;\r\n      tokens.idToken = authResult.idToken;\r\n      tokens.expiresAt = expiresAt;\r\n      localStorage.setItem(\"isLoggedIn\", true);\r\n      user = authResult.idTokenPayload;\r\n      if(!flag){\r\n          navigate(\"/\");\r\n      }\r\n      cb();\r\n    }\r\n  }\r\n\r\n  export const handleAuthentication = () => {\r\n    if (!isBrowser) {\r\n      return;\r\n    }\r\n\r\n    auth.parseHash(setSession());\r\n  }\r\n\r\n  export const getProfile = () => {\r\n    return user;\r\n  }\r\n\r\n  export const silentAuth = callback => {\r\n    if (!isAuthenticated()) return callback();\r\n    auth.checkSession({}, setSession(callback, true));\r\n  }\r\n\r\n  export const logout = () => {\r\n    localStorage.setItem(\"isLoggedIn\", false);\r\n    auth.logout();\r\n  }\r\n"],"sourceRoot":""}