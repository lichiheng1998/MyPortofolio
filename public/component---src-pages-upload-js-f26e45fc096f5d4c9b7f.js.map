{"version":3,"sources":["webpack:///./src/components/UploadForm.js","webpack:///./src/pages/upload.js","webpack:///./src/components/Navbar.js"],"names":["UploadForm","props","_React$useState","React","useState","selectedTab","setSelectedTab","buttonStyle","isLoading","react_default","a","createElement","className","wrapper","style","marginBottom","paddingTop","name","onChange","handleInputChange","value","data","title","type","placeholder","index_es","icon","faHeading","description","faBook","js_default","content","setContent","onTabChange","generateMarkdownPreview","markdown","Promise","resolve","converter","makeHtml","onClick","handleSubmit","gatsby_browser_entry","to","Upload","_this","_React$Component","call","this","_isMounted","Showdown","tables","simplifiedAutoLink","strikethrough","tasklists","state","author","getProfile","nickname","bind","_assertThisInitialized","checkValidity","event","persist","setState","prev","target","componentDidMount","Object","values","reduce","b","preventDefault","xhttp","XMLHttpRequest","open","setRequestHeader","tokens","accessToken","self","onreadystatechange","readyState","status","toast","success","position","POSITION","TOP_CENTER","error","send","JSON","stringify","render","isAuthenticated","Navbar","logo","Helmet_default","htmlAttributes","justifyContent","height","components_UploadForm","login","Component","activeStyle","background","color","isActive","clickHandler","myElement","document","querySelector","window","Headroom","offset","tolerance","init","button","react__WEBPACK_IMPORTED_MODULE_0___default","logout","_fortawesome_react_fontawesome__WEBPACK_IMPORTED_MODULE_1__","faUserCircle","extra","zIndex","fontFamily","fontWeight","burger","data-target","react_slidedown__WEBPACK_IMPORTED_MODULE_5__","width","id","gatsby__WEBPACK_IMPORTED_MODULE_6__","href","faGithub"],"mappings":"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","file":"component---src-pages-upload-js-f26e45fc096f5d4c9b7f.js","sourcesContent":["import React from \"react\";\r\nimport { wrapper } from \"./Planguages.module.css\";\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faHeading, faBook } from '@fortawesome/free-solid-svg-icons';\r\nimport { Link } from \"gatsby\";\r\nimport ReactMde from \"react-mde\";\r\n\r\nconst UploadForm = (props) => {\r\n    const [ selectedTab, setSelectedTab ] = React.useState(\"write\");\r\n    let buttonStyle = props.isLoading ? \"is-loading\" : \"\"\r\n    return (\r\n        <div className={`${wrapper}`}>\r\n            <div style={{marginBottom: 0}} className=\"columns\">\r\n                <div style={{paddingTop: 0}} className=\"column is-one-quarter\">\r\n                    <label className=\"label\">Title</label>\r\n                    <div className=\"control has-icons-left\">\r\n                      <input name=\"title\" onChange={props.handleInputChange} value={props.data.title} className=\"input\" type=\"text\" placeholder=\"Title of the post\"/>\r\n                      <span className=\"icon is-small is-left\">\r\n                        <FontAwesomeIcon icon={faHeading} />\r\n                      </span>\r\n                    </div>\r\n                </div>\r\n\r\n                <div style={{paddingTop: 0}} className=\"column\">\r\n                    <label className=\"label\">Description</label>\r\n                    <div className=\"control has-icons-left\">\r\n                      <input name=\"description\" onChange={props.handleInputChange} value={props.data.description} className=\"input\" type=\"text\" placeholder=\"More about the post\"/>\r\n                      <span className=\"icon is-small is-left\">\r\n                        <FontAwesomeIcon icon={faBook} />\r\n                      </span>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n              <div className=\"field\">\r\n                <label className=\"label\">Content</label>\r\n                <ReactMde\r\n                  value={props.data.content}\r\n                  onChange={props.setContent}\r\n                  selectedTab={selectedTab}\r\n                  onTabChange={setSelectedTab}\r\n                  generateMarkdownPreview={markdown =>\r\n                    Promise.resolve(props.converter.makeHtml(markdown))\r\n                  }\r\n                />\r\n              </div>\r\n            <br />\r\n            <div className=\"field is-grouped\">\r\n                <div className=\"control\">\r\n                  <button onClick={props.handleSubmit} className={`button ${buttonStyle} is-link`}>Submit</button>\r\n                </div>\r\n                <div className=\"control\">\r\n                  <button className=\"button is-text\"><Link to=\"/blogs\">Cancel</Link></button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default UploadForm;\r\n","import React from \"react\";\r\nimport { login, isAuthenticated, tokens , getProfile } from \"../utils/auth\";\r\nimport { toast } from 'react-toastify';\r\nimport Helmet from 'react-helmet';\r\nimport Navbar from \"../components/Navbar\";\r\nimport UploadForm from \"../components/UploadForm\";\r\nimport * as Showdown from \"showdown\";\r\n\r\nclass Upload extends React.Component {\r\n    _isMounted = false;\r\n    constructor(){\r\n        super();\r\n        this.converter = new Showdown.Converter({\r\n          tables: true,\r\n          simplifiedAutoLink: true,\r\n          strikethrough: true,\r\n          tasklists: true\r\n        });\r\n\r\n        this.state = {\r\n            data: {\r\n                author: getProfile().nickname,\r\n                title: \"\",\r\n                content: \"\",\r\n                description: \"\",\r\n            },\r\n            isLoading: false\r\n        }\r\n        this.handleInputChange = this.handleInputChange.bind(this);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n        this.setContent = this.setContent.bind(this);\r\n        this.checkValidity = this.checkValidity.bind(this);\r\n    }\r\n\r\n    handleInputChange(event){\r\n        event.persist();\r\n        this.setState((prev) => {\r\n            (prev.data)[event.target.name] = event.target.value;\r\n            return prev;\r\n        })\r\n    }\r\n\r\n    setContent(value){\r\n        this.setState((prev) => {\r\n            prev.data.content = value;\r\n            return prev;\r\n        })\r\n    }\r\n\r\n    componentDidMount(){\r\n        this._isMounted = true;\r\n    }\r\n\r\n    checkValidity(){\r\n        let isValid = Object.values(this.state.data).reduce((a, b)=>{\r\n            return a && b;\r\n        });\r\n        return isValid\r\n    }\r\n\r\n    handleSubmit(event){\r\n        if (event) {\r\n            event.preventDefault();\r\n        }\r\n\r\n        if (this.state.isLoading) {\r\n            return;\r\n        }\r\n        if(!this.checkValidity()){\r\n            toast.error(\"All fields should be filled!\", {\r\n                position: toast.POSITION.TOP_CENTER\r\n            });\r\n            return;\r\n        }\r\n\r\n        this.setState((prev) => {\r\n            prev.isLoading = true;\r\n            return prev;\r\n        })\r\n        var xhttp = new XMLHttpRequest();\r\n        xhttp.open(\"POST\", 'http://ec2-18-222-3-141.us-east-2.compute.amazonaws.com:5000/upload', true);\r\n\r\n        //Send the proper header information along with the request\r\n        xhttp.setRequestHeader(\"Content-Type\", \"application/json\");\r\n        xhttp.setRequestHeader(\"Authorization\", `Bearer ${tokens.accessToken}`);\r\n        let self = this;\r\n        xhttp.onreadystatechange = function() {\r\n            if (this.readyState === 4){\r\n                if (self._isMounted) {\r\n                    self.setState((prev) => {\r\n                        prev.isLoading = false;\r\n                        return prev;\r\n                    })\r\n                }\r\n                if (this.status === 200) {\r\n                    toast.success(\"Upload the post successfully!\", {\r\n                        position: toast.POSITION.TOP_CENTER\r\n                    });\r\n                } else {\r\n                    toast.error(\"Can't upload!\", {\r\n                        position: toast.POSITION.TOP_CENTER\r\n                    });\r\n                }\r\n            }\r\n        };\r\n\r\n        xhttp.send(JSON.stringify(this.state.data));\r\n    }\r\n\r\n    render(){\r\n        if (!isAuthenticated()) {\r\n            login();\r\n            return <p>Redirecting to login...</p>\r\n        }\r\n        return (\r\n            <div>\r\n                <Navbar logo=\"Upload New Post\"/>\r\n                <Helmet htmlAttributes={{style: 'background-color : whitesmoke'}}/>\r\n                <div style={{justifyContent: \"center\"}} className=\" hero is-flex section is-fullheight\">\r\n                    <div style={{\r\n                        height: \"3.25rem\"\r\n                    }}/>\r\n                    <UploadForm\r\n                        handleInputChange={this.handleInputChange}\r\n                        handleSubmit={this.handleSubmit}\r\n                        setContent={this.setContent}\r\n                        data={this.state.data}\r\n                        isLoading={this.state.isLoading}\r\n                        converter={this.converter}\r\n                    />\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Upload;\r\n","import React from \"react\";\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faGithub } from '@fortawesome/free-brands-svg-icons';\r\nimport { faUserCircle } from '@fortawesome/free-solid-svg-icons';\r\nimport burger from \"./Navbar.module.css\";\r\nimport {SlideDown} from 'react-slidedown';\r\nimport { Link } from \"gatsby\";\r\nimport { login, isAuthenticated, logout } from \"../utils/auth\";\r\nimport 'react-slidedown/lib/slidedown.css';\r\n\r\nconst activeStyle = {\r\n    background: \"#636363\",\r\n    color: \"white\"\r\n}\r\nclass Navbar extends React.Component{\r\n    constructor(){\r\n        super();\r\n        this.state = {\r\n            isActive: false\r\n        }\r\n        this.clickHandler = this.clickHandler.bind(this);\r\n    }\r\n\r\n    componentDidMount(){\r\n        // grab an element\r\n        var myElement = document.querySelector(\".headroom\");\r\n        // construct an instance of Headroom, passing the element\r\n        var headroom  = new window.Headroom(myElement, {\r\n          \"offset\": 305,\r\n          \"tolerance\": 5\r\n        });\r\n        // initialise\r\n        headroom.init();\r\n    }\r\n\r\n    clickHandler(event){\r\n        this.setState((prev) => {\r\n            return {\r\n                isActive: !prev.isActive\r\n            };\r\n        });\r\n    }\r\n\r\n    render(){\r\n        let button = isAuthenticated() ? (\r\n            <span onClick={logout} className=\"button is-danger is-outlined\">\r\n              <span className=\"icon\">\r\n                <FontAwesomeIcon icon={faUserCircle} />\r\n              </span>\r\n              <span>Logout</span>\r\n            </span>\r\n        ) : (\r\n            <span onClick={login} className=\"button is-success is-outlined\">\r\n              <span className=\"icon\">\r\n                <FontAwesomeIcon icon={faUserCircle} />\r\n              </span>\r\n              <span>Login</span>\r\n            </span>\r\n        );\r\n        let extra = this.state.isActive ? \"is-active\" : \"\";\r\n        return (\r\n            <header style={{zIndex: 10}} className=\"headroom is-fixed-top\">\r\n                <nav className=\"navbar\">\r\n                <div className=\"navbar-brand\">\r\n                  <span className=\"navbar-item is-size-5\">\r\n                    <p style={{fontFamily: \"'Roboto', sans-serif\", fontWeight: 900}}>{this.props.logo || \"Adam's Page\"}</p>\r\n                  </span>\r\n                  <span className={`navbar-burger burger ${extra} ${burger}`} onClick={this.clickHandler} data-target=\"navbarMenuHeroA\">\r\n                    <span></span>\r\n                    <span></span>\r\n                    <span></span>\r\n                  </span>\r\n                </div>\r\n                <SlideDown style={{width: \"100%\"}}>\r\n                    <div id=\"navbarMenuHeroA\" className={\"navbar-menu \" + extra}>\r\n                      <div className=\"navbar-end has-text-centered\">\r\n                        <Link activeStyle={activeStyle} to=\"/\" className=\"navbar-item is-active\">\r\n                          Home\r\n                        </Link>\r\n                        <Link activeStyle={activeStyle} to=\"/blogs\" className=\"navbar-item\">\r\n                          Blog\r\n                        </Link>\r\n                        <span className=\"navbar-item\">\r\n                          <a href=\"https://github.com/lichiheng1998\" className=\"button is-link is-inverted\">\r\n                            <span className=\"icon\">\r\n                              <FontAwesomeIcon icon={faGithub} />\r\n                            </span>\r\n                            <span>Github</span>\r\n                          </a>\r\n                        </span>\r\n                        <span className=\"navbar-item\">\r\n                          {button}\r\n                        </span>\r\n                      </div>\r\n                    </div>\r\n                    </SlideDown>\r\n                </nav>\r\n            </header>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Navbar;\r\n"],"sourceRoot":""}