{"version":3,"sources":["webpack:///./src/pages/update.js","webpack:///./src/components/Navbar.js","webpack:///./src/components/UploadForm.js"],"names":["Update","props","_this","_React$Component","call","this","_isMounted","converter","Showdown","tables","simplifiedAutoLink","strikethrough","tasklists","state","location","data","isLoading","handleInputChange","bind","_assertThisInitialized","handleSubmit","setContent","checkValidity","event","persist","setState","prev","target","name","value","content","componentDidMount","navigate","react__WEBPACK_IMPORTED_MODULE_5___default","a","createElement","Object","values","reduce","b","preventDefault","xhttp","XMLHttpRequest","open","process","setRequestHeader","tokens","accessToken","self","onreadystatechange","readyState","status","toast","success","position","POSITION","TOP_CENTER","error","send","JSON","stringify","render","isAuthenticated","_components_Navbar__WEBPACK_IMPORTED_MODULE_9__","logo","react_helmet__WEBPACK_IMPORTED_MODULE_8___default","htmlAttributes","style","justifyContent","className","height","_components_UploadForm__WEBPACK_IMPORTED_MODULE_10__","login","React","Component","activeStyle","background","color","Navbar","isActive","clickHandler","myElement","document","querySelector","window","Headroom","offset","tolerance","init","button","react__WEBPACK_IMPORTED_MODULE_0___default","onClick","logout","_fortawesome_react_fontawesome__WEBPACK_IMPORTED_MODULE_1__","icon","faUserCircle","extra","zIndex","fontFamily","fontWeight","burger","data-target","react_slidedown__WEBPACK_IMPORTED_MODULE_5__","width","id","gatsby__WEBPACK_IMPORTED_MODULE_6__","to","href","faGithub","UploadForm","_React$useState","useState","selectedTab","setSelectedTab","buttonStyle","react__WEBPACK_IMPORTED_MODULE_2___default","wrapper","marginBottom","paddingTop","onChange","title","type","placeholder","_fortawesome_react_fontawesome__WEBPACK_IMPORTED_MODULE_4__","faHeading","description","faBook","react_mde__WEBPACK_IMPORTED_MODULE_7___default","onTabChange","generateMarkdownPreview","markdown","Promise","resolve","makeHtml"],"mappings":"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","file":"component---src-pages-update-js-8df37e0d98d55bbf93cf.js","sourcesContent":["import React from \"react\";\r\nimport { login, isAuthenticated, tokens , getProfile } from \"../utils/auth\";\r\nimport { toast } from 'react-toastify';\r\nimport Helmet from 'react-helmet';\r\nimport Navbar from \"../components/Navbar\";\r\nimport UploadForm from \"../components/UploadForm\";\r\nimport * as Showdown from \"showdown\";\r\nimport { navigate } from \"gatsby\";\r\n\r\nclass Update extends React.Component {\r\n    _isMounted = false;\r\n    constructor(props){\r\n        super(props);\r\n        this.converter = new Showdown.Converter({\r\n          tables: true,\r\n          simplifiedAutoLink: true,\r\n          strikethrough: true,\r\n          tasklists: true\r\n        });\r\n        let state = this.props.location.state;\r\n        let data = state ? state.data : null;\r\n        this.state = {\r\n            data: data,\r\n            isLoading: false\r\n        }\r\n        this.handleInputChange = this.handleInputChange.bind(this);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n        this.setContent = this.setContent.bind(this);\r\n        this.checkValidity = this.checkValidity.bind(this);\r\n    }\r\n\r\n    handleInputChange(event){\r\n        event.persist();\r\n        this.setState((prev) => {\r\n            (prev.data)[event.target.name] = event.target.value;\r\n            return prev;\r\n        })\r\n    }\r\n\r\n    setContent(value){\r\n        this.setState((prev) => {\r\n            prev.data.content = value;\r\n            return prev;\r\n        })\r\n    }\r\n\r\n    componentDidMount(){\r\n        this._isMounted = true;\r\n        if (!this.state.data) {\r\n            navigate(\"/blogs\");\r\n            return <p>Redirecting to blog...</p>\r\n        }\r\n    }\r\n\r\n    checkValidity(){\r\n        let isValid = Object.values(this.state.data).reduce((a, b)=>{\r\n            return a && b;\r\n        });\r\n        return isValid\r\n    }\r\n\r\n    handleSubmit(event){\r\n        if (event) {\r\n            event.preventDefault();\r\n        }\r\n        if (this.state.isLoading) {\r\n            return;\r\n        }\r\n        if(!this.checkValidity()){\r\n            toast.error(\"All fields should be filled!\", {\r\n                position: toast.POSITION.TOP_CENTER\r\n            });\r\n            return;\r\n        }\r\n        this.setState((prev) => {\r\n            prev.isLoading = true;\r\n            return prev;\r\n        })\r\n        var xhttp = new XMLHttpRequest();\r\n        xhttp.open(\"PATCH\", `${process.env.API_DOMAIN}/posts`, true);\r\n        //Send the proper header information along with the request\r\n        xhttp.setRequestHeader(\"Content-Type\", \"application/json\");\r\n        xhttp.setRequestHeader(\"Authorization\", `Bearer ${tokens.accessToken}`);\r\n        let self = this;\r\n        xhttp.onreadystatechange = function() {\r\n            if (this.readyState === 4){\r\n                if (self._isMounted) {\r\n                    self.setState((prev) => {\r\n                        prev.isLoading = false;\r\n                        return prev;\r\n                    })\r\n                }\r\n                if (this.status === 200) {\r\n                    toast.success(\"Update the post successfully!\", {\r\n                        position: toast.POSITION.TOP_CENTER\r\n                    });\r\n                } else {\r\n                    toast.error(\"Can't update!\", {\r\n                        position: toast.POSITION.TOP_CENTER\r\n                    });\r\n                }\r\n            }\r\n        };\r\n        xhttp.send(JSON.stringify(this.state.data));\r\n    }\r\n\r\n    render(){\r\n        if (!isAuthenticated()) {\r\n            login();\r\n            return <p>Redirecting to login...</p>\r\n        }\r\n        return (\r\n            <div>\r\n                <Navbar logo=\"Update Post\"/>\r\n                <Helmet htmlAttributes={{style: 'background-color : whitesmoke'}}/>\r\n                <div style={{justifyContent: \"center\"}} className=\" hero is-flex section is-fullheight\">\r\n                    <div style={{\r\n                        height: \"3.25rem\"\r\n                    }}/>\r\n                    <UploadForm\r\n                        handleInputChange={this.handleInputChange}\r\n                        handleSubmit={this.handleSubmit}\r\n                        setContent={this.setContent}\r\n                        data={this.state.data}\r\n                        isLoading={this.state.isLoading}\r\n                        converter={this.converter}\r\n                    />\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Update;\r\n","import React from \"react\";\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faGithub } from '@fortawesome/free-brands-svg-icons';\r\nimport { faUserCircle } from '@fortawesome/free-solid-svg-icons';\r\nimport burger from \"./Navbar.module.css\";\r\nimport {SlideDown} from 'react-slidedown';\r\nimport { Link } from \"gatsby\";\r\nimport { login, isAuthenticated, logout } from \"../utils/auth\";\r\nimport 'react-slidedown/lib/slidedown.css';\r\n\r\nconst activeStyle = {\r\n    background: \"#636363\",\r\n    color: \"white\"\r\n}\r\nclass Navbar extends React.Component{\r\n    constructor(){\r\n        super();\r\n        this.state = {\r\n            isActive: false\r\n        }\r\n        this.clickHandler = this.clickHandler.bind(this);\r\n    }\r\n\r\n    componentDidMount(){\r\n        // grab an element\r\n        var myElement = document.querySelector(\".headroom\");\r\n        // construct an instance of Headroom, passing the element\r\n        var headroom  = new window.Headroom(myElement, {\r\n          \"offset\": 305,\r\n          \"tolerance\": 5\r\n        });\r\n        // initialise\r\n        headroom.init();\r\n    }\r\n\r\n    clickHandler(event){\r\n        this.setState((prev) => {\r\n            return {\r\n                isActive: !prev.isActive\r\n            };\r\n        });\r\n    }\r\n\r\n    render(){\r\n        let button = isAuthenticated() ? (\r\n            <span onClick={logout} className=\"button is-danger is-outlined\">\r\n              <span className=\"icon\">\r\n                <FontAwesomeIcon icon={faUserCircle} />\r\n              </span>\r\n              <span>Logout</span>\r\n            </span>\r\n        ) : (\r\n            <span onClick={login} className=\"button is-success is-outlined\">\r\n              <span className=\"icon\">\r\n                <FontAwesomeIcon icon={faUserCircle} />\r\n              </span>\r\n              <span>Login</span>\r\n            </span>\r\n        );\r\n        let extra = this.state.isActive ? \"is-active\" : \"\";\r\n        return (\r\n            <header style={{zIndex: 10}} className=\"headroom is-fixed-top\">\r\n                <nav className=\"navbar\">\r\n                <div className=\"navbar-brand\">\r\n                  <span className=\"navbar-item is-size-5\">\r\n                    <p style={{fontFamily: \"'Roboto', sans-serif\", fontWeight: 900}}>{this.props.logo || \"Adam's Page\"}</p>\r\n                  </span>\r\n                  <span className={`navbar-burger burger ${extra} ${burger}`} onClick={this.clickHandler} data-target=\"navbarMenuHeroA\">\r\n                    <span></span>\r\n                    <span></span>\r\n                    <span></span>\r\n                  </span>\r\n                </div>\r\n                <SlideDown style={{width: \"100%\"}}>\r\n                    <div id=\"navbarMenuHeroA\" className={\"navbar-menu \" + extra}>\r\n                      <div className=\"navbar-end has-text-centered\">\r\n                        <Link activeStyle={activeStyle} to=\"/\" className=\"navbar-item is-active\">\r\n                          Home\r\n                        </Link>\r\n                        <Link activeStyle={activeStyle} to=\"/blogs\" className=\"navbar-item\">\r\n                          Blog\r\n                        </Link>\r\n                        <span className=\"navbar-item\">\r\n                          <a href=\"https://github.com/lichiheng1998\" className=\"button is-link is-inverted\">\r\n                            <span className=\"icon\">\r\n                              <FontAwesomeIcon icon={faGithub} />\r\n                            </span>\r\n                            <span>Github</span>\r\n                          </a>\r\n                        </span>\r\n                        <span className=\"navbar-item\">\r\n                          {button}\r\n                        </span>\r\n                      </div>\r\n                    </div>\r\n                    </SlideDown>\r\n                </nav>\r\n            </header>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Navbar;\r\n","import React from \"react\";\r\nimport { wrapper } from \"./Planguages.module.css\";\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faHeading, faBook } from '@fortawesome/free-solid-svg-icons';\r\nimport { Link } from \"gatsby\";\r\nimport ReactMde from \"react-mde\";\r\n\r\nconst UploadForm = (props) => {\r\n    const [ selectedTab, setSelectedTab ] = React.useState(\"write\");\r\n    let buttonStyle = props.isLoading ? \"is-loading\" : \"\"\r\n    return (\r\n        <div className={`${wrapper}`}>\r\n            <div style={{marginBottom: 0}} className=\"columns\">\r\n                <div style={{paddingTop: 0}} className=\"column is-one-quarter\">\r\n                    <label className=\"label\">Title</label>\r\n                    <div className=\"control has-icons-left\">\r\n                      <input name=\"title\" onChange={props.handleInputChange} value={props.data.title} className=\"input\" type=\"text\" placeholder=\"Title of the post\"/>\r\n                      <span className=\"icon is-small is-left\">\r\n                        <FontAwesomeIcon icon={faHeading} />\r\n                      </span>\r\n                    </div>\r\n                </div>\r\n\r\n                <div style={{paddingTop: 0}} className=\"column\">\r\n                    <label className=\"label\">Description</label>\r\n                    <div className=\"control has-icons-left\">\r\n                      <input name=\"description\" onChange={props.handleInputChange} value={props.data.description} className=\"input\" type=\"text\" placeholder=\"More about the post\"/>\r\n                      <span className=\"icon is-small is-left\">\r\n                        <FontAwesomeIcon icon={faBook} />\r\n                      </span>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n              <div className=\"field\">\r\n                <label className=\"label\">Content</label>\r\n                <ReactMde\r\n                  value={props.data.content}\r\n                  onChange={props.setContent}\r\n                  selectedTab={selectedTab}\r\n                  onTabChange={setSelectedTab}\r\n                  generateMarkdownPreview={markdown =>\r\n                    Promise.resolve(props.converter.makeHtml(markdown))\r\n                  }\r\n                />\r\n              </div>\r\n            <br />\r\n            <div className=\"field is-grouped\">\r\n                <div className=\"control\">\r\n                  <button onClick={props.handleSubmit} className={`button ${buttonStyle} is-link`}>Submit</button>\r\n                </div>\r\n                <div className=\"control\">\r\n                  <button className=\"button is-text\"><Link to=\"/blogs\">Cancel</Link></button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default UploadForm;\r\n"],"sourceRoot":""}